pipeline {
    agent any


    environment {
        imageTag = "${BUILD_NUMBER}"
        registryUser = "eobard"
    }

    tools {
        maven 'maven-latest'  // or whatever name you configured in Jenkins > Global Tools
    }

    stages {
        stage('Build with Maven') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('Build Image'){
            steps{
                sh "docker build -t ${env.registryUser}/spring-demo-app:${env.imageTag} ."
            }
        }

        stage('Push to Registry'){
            steps{
                withCredentials([usernamePassword(credentialsId: 'docker-hub-auth', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
                    sh """
                        docker login -u $USER -p $PASS
                        docker push $USER/spring-demo-app:${env.imageTag}
                    """
                }
            }
        }

         stage('Deploy to Openshift ') {
            steps {
                 script {
                    sh "yq -i '.spec.template.spec.containers[0].image = \"${env.registryUser}/spring-demo-app:${env.imageTag}\"' pipeline/deployment.yaml"
                    sh '''
                        for file in pipeline/*.yaml; do
                            envsubst < "$file" | kubectl apply -f - -n micro-service --validate=false
                        done
                    '''
                }
            }
        }
    }
}